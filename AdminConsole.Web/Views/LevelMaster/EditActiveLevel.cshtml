
@model CodeGen.Model.LevelMasterModel.CreateLevelMaster
@{
    Layout = "~/Views/Shared/_Layout2.cshtml";
    ViewData["Title"] = "AddLevelMaster";

}




@section Scripts {
    <script>
        $(document).ready(function () {
           // BindupdateParentLevel();
            BindParentLevel();
          $('#dvparentLevel').hide();
    });
    </script>

    <script>
        function BindParentLevel() {
            var HirerarchyId = $('#ddlHierarchy').val();
            //debugger;
            var data = {
                HId: HirerarchyId

            };

            $.ajax({
                type: 'GET',
                 url: '@Url.Content("~/LevelMaster/BindParentLevelByHierarchyId")',
               // url: '/LevelMaster/BindParentLevelByHierarchyId',
                data: data,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    $("#hdnparentid").val(response.length);
                   // alert(response.length);
                    var dvparentLeveldisplay = document.getElementById("dvparentLevel");
                    $("#ddlparentlevelId").empty();
                   // alert(@Model.INTPARENTID);
                    if (response.length == 0 || @Model.INTPARENTID== 0) {
                             $('#dvparentLevel').hide();

                       // dvparentLeveldisplay.style.display = "none";

                    } else {
                             $('#dvparentLevel').show();
                           // console.log(response);
                    // dvparentLeveldisplay.style.display = "block";
                  
                    $("#ddlparentlevelId").append($('<option value="0">--Select Parent Level--</option>'));
                        if (response.length > 0) {
                            for (var i = 0; i < response.length; i++) {
                                $("#ddlparentlevelId").append($('<option/>')
                                    .val(response[i].intlevelid)
                                    .html(response[i].nvchlabel)
                                );
                            
                            }
                              $('#ddlparentlevelId').val(@Model.INTPARENTID);
                        }
                    }






                 



                },
                error: function (error) {
                    console.log(error);
                }
            });
            return true;


        }
         function BindupdateParentLevel() {
            var HirerarchyId = $('#ddlHierarchy').val();
            var data = {
                HId: HirerarchyId

            };

            $.ajax({
                type: 'GET',
                  url: '@Url.Content("~/LevelMaster/BindParentLevelByHierarchyId")',
               // url: '/LevelMaster/BindParentLevelByHierarchyId',
                data: data,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    $("#hdnparentid").val(response.length);
                    $("#ddlparentlevelId").empty();
                    $("#ddlparentlevelId").append($('<option value="0">--Select Parent Level--</option>'));
                    if (response.length > 0) {
                        for (var i = 0; i < response.length; i++) {
                            $("#ddlparentlevelId").append($('<option/>')
                                .val(response[i].intlevelid)
                                .html(response[i].nvchlabel)
                            );
                             $('#ddlparentlevelId').val(@Model.INTPARENTID);
                        }
                    }



                },
                error: function (error) {
                    console.log(error);
                }
            });
            return true;


        }
    </script>

    <script type="text/javascript" language="javascript">
        function validateForm() {
            if ($("#ddlHierarchy").val() == 0) {
                $("#ddlHierarchy").focus();
                alert("Please Select Hierarchy Name.");
                return false;
            }
            else if ($("#txtLevelName").val() == "") {
                $("#txtLevelName").focus();
                alert(" Level Name Can't be blank.");
                return false;
            }
           else if ($("#txtLeveldetailName").val() == "") {
                $("#txtLeveldetailName").focus();
                alert("Alias Name Can't be blank.");
                return false;
            }
            else {
                return confirm('Are you sure you want to  update this?');
            }
        }



        function inputLimiter(e, allow) {
            var AllowableCharacters = '';

            if (allow == 'NameCharactersymbol') {
                AllowableCharacters = ' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz./&';
            }
            if (allow == 'NameCharacters') {
                AllowableCharacters = ' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-.\'';
            }
            if (allow == 'Email') {
                AllowableCharacters = '1234567890@ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_.';
            }
            if (allow == 'Description') {
                AllowableCharacters = '1234567890 ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-.,()/';
            }
            if (allow == 'NameCharactersAndNumbers') {
                AllowableCharacters = '1234567890 ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-,/.\'';
            }
            if (allow == 'Numbers') {
                AllowableCharacters = '1234567890';
            }
            if (allow == 'Decimal') {
                AllowableCharacters = '1234567890.';
            }
            if (allow == 'Filename') {
                AllowableCharacters = '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz/';
            }
            var k;
            k = document.all ? parseInt(e.keyCode) : parseInt(e.which);
            if (k != 13 && k != 8 && k != 0) {
                if ((e.ctrlKey == false) && (e.altKey == false)) {
                    return (AllowableCharacters.indexOf(String.fromCharCode(k)) != -1);
                }
                else {
                    return true;
                }
            }
            else {
                return true;
            }
        }

    </script>
    <script type="text/javascript">
        $(function () {
            $("#btnReset").bind("click", function () {
               var url = '@Url.Action("ViewActiveLevel", "LevelMaster")';
                window.location.href = url;
            });
        });
    </script>




}
<div class="section">
    <div class="page-title">
        <div class="title-details">
            <h4>Level Master</h4>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><span class="icon-home1"></span></li>
                    <li class="breadcrumb-item">Level Master</li>
                    <li class="breadcrumb-item active" aria-current="page">Edit Level Master</li>
                </ol>
            </nav>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-sm-12">
            <div class="card">
                <div class="card-header">
                    <ul class="nav nav-tabs nav-fill" role="tablist">
                        <a class="nav-item nav-link" asp-controller="LevelMaster" asp-action="AddLevelMaster">Add</a>
                        <a class="nav-item nav-link active" asp-controller="LevelMaster" asp-action="ViewActiveLevel">Active</a>
                        <a class="nav-item nav-link" asp-controller="LevelMaster" asp-action="ViewInActiveLevel">InActive</a>
                    </ul>
                    <div class="indicatorslist">
                        <p class="ml-2 text-danger">(*) Indicates mandatory </p>
                    </div>
                </div>
                <div class="card-body">
                    <form id="frmupdateLevelMaster" data-parsley-validate novalidate method="post" asp-action="EditLevel" asp-controller="LevelMaster" asp-area="" asp-antiforgery="true" onsubmit="return validateForm()">
                        <div class="form-group row">
                            <label class="col-12 col-md-2 col-xl-2 control-label">
                                Hirerarchy Name
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-12 col-md-6 col-xl-4">
                                <span class="colon">:</span>
                                <select asp-for="INTHIERARCHYID" asp-items="@(new SelectList(Model.HierarchyList,"INTHIERARCHYID","NVCHHIERARCHYNAME"))" onchange=" return BindParentLevel();" id="ddlHierarchy" class="form-control">
                                    <option value="0">--Select Hirerarchy Name--</option>
                                </select>
                            </div>


                        </div>
                        <div class="form-group row" id="dvparentLevel">
                            <label class="col-12 col-md-2 col-xl-2 control-label">
                                Parent Level
                            </label>
                            <div class="col-12 col-md-6 col-xl-4">
                                <span class="colon">:</span>
                                <select asp-for="INTPARENTID" id="ddlparentlevelId" class="form-control">
                                </select>
                            </div>

                        </div>
                        <div class="form-group row">
                            <label class="col-12 col-md-2 col-xl-2 control-label">
                                Level Name
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-12 col-md-6 col-xl-4">
                                <span class="colon">:</span>
                                <input type="text" asp-for="NVCHLABEL" id="txtLevelName" name="NVCHLABEL" style="text-transform:uppercase" Onkeypress="return inputLimiter(event,'NameCharacters')" class="form-control" placeholder="Enter Level Name" autocomplete="off" maxlength="100" />
                                <input asp-for="INTUPDATEDBY" type="hidden" value=@Model.INTUPDATEDBY />
                                <input asp-for="INTLEVELID" type="hidden" value="@Model.INTLEVELID" />
                                <input type="hidden" id="hdnparentid" />
                            </div>


                        </div>
                        <div class="form-group row">
                            <label class="col-12 col-md-2 col-xl-2 control-label">
                                Alias Name
                                <span class="text-danger">*</span>
                            </label>
                            <div class="col-12 col-md-6 col-xl-4">
                                <span class="colon">:</span>
                                <input type="text" asp-for="VCHALLIAS" id="txtLeveldetailName" style="text-transform:uppercase" Onkeypress="return inputLimiter(event,'NameCharactersymbol')" class="form-control" placeholder="Enter Level Name" autocomplete="off" maxlength="100" />
                                <input asp-for="INTCREATEDBY" type="hidden" value=@Model.INTCREATEDBY />
                                <input type="hidden" id="hdnparentid" />
                            </div>


                        </div>
                        <div class="form-group row">
                            <label class="col-12 col-md-2 col-xl-2 control-label" for="demo-email-input"> <span class="text-danger"></span></label>

                            <div class="col-12 col-md-6 col-xl-4">
                                <span class="colon"></span>

                                <button type="submit" name="submit" id="btnsubmit" class="btn btn-primary mb-1t white-text" title="Submit" value="Submit">Update</button>
                                <button type="button" id="btnReset" value="Cancel" class="btn btn-danger"> Cancel </button>
                                @*<input type="button" id="btnReset" value="Reset" class="btn btn-info" />*@
                            </div>

                        </div>

                    </form>
                </div>
            </div>

        </div>

    </div>
</div>

